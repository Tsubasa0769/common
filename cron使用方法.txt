crontab -u //设定某个用户的cron服务
crontab -l //列出某个用户cron服务的详细内容
crontab -r //删除某个用户的cron服务
crontab -e //编辑某个用户的cron服务


定时任务的每段为：分，时，日，月，周，用户，命令
第1列表示分钟1～59 每分钟用*或者 */1表示
第2列表示小时1～23（0表示0点）
第3列表示日期1～31
第4列表示月份1～12
第5列标识号星期0～6（0表示星期天）
第6列要运行的命令

*：表示任意时间都，实际上就是“每”的意思。可以代表00-23小时或者00-12每月或者00-59分
-：表示区间，是一个范围，00 17-19 * * * cmd，就是每天17,18,19点的整点执行命令
,：是分割时段，30 3,19,21 * * * cmd，就是每天凌晨3和晚上19,21点的半点时刻执行命令
/n：表示分割，可以看成除法，*/5 * * * * cmd，每隔五分钟执行一次

#基本使用
	crontab -l -u root       #查看root用户
	0 */1 * * * command
	0 */2 * * * command
	crontab -e                  #编辑定时任务，在编写时会检查语法，而echo，或者vi编辑配置时不会检查(visudo也会检查语法)
	0 */1 * * * command
	0 */2 * * * command

	crontab文件的一些例子：
	1）30 21 * * * /usr/local/etc/rc.d/lighttpd restart
	上面的例子表示每晚的21:30重启apache。
	2）45 4 1,10,22 * * /usr/local/etc/rc.d/lighttpd restart
	上面的例子表示每月1、10、22日的4 : 45重启apache。
	3）10 1 * * 6,0 /usr/local/etc/rc.d/lighttpd restart
	上面的例子表示每周六、周日的1 : 10重启apache。
	4）0,30 18-23 * * * /usr/local/etc/rc.d/lighttpd restart
	上面的例子表示在每天18 : 00至23 : 00之间每隔30分钟重启apache。最后一次的任务执行时间为23:30

	5）0 23 * * 6 /usr/local/etc/rc.d/lighttpd restart
	上面的例子表示每星期六的11 : 00 pm重启apache。

	6）* */1 * * * /usr/local/etc/rc.d/lighttpd restart
	每一小时重启apache(错误的)
	*代表每分钟就执行一次，上面的语句的意思为每隔一小时的每分钟都在执行重启apache

	*/60 * * * * #每60分钟即每小时执行一次
	*/105 * * * * #每105分钟执行一次

	7）* 23,00-7/1 * * * /usr/local/etc/rc.d/lighttpd restart
	晚上11点到早上7点之间，每隔一小时重启apache(错误的)

	上面的定时任务的分钟为*号，代表每分钟都在执行，表示晚上23点和凌晨0-7点之间每隔一小时的每分钟都在再行重启apache

	8）0 11 4 * mon-wed /usr/local/etc/rc.d/lighttpd restart
	每月的4号与每周一到周三的11点重启apache（周和日尽量不要同时使用）
	9）0 4 1 jan * /usr/local/etc/rc.d/lighttpd restart
	一月一号的4点重启apache

#其它
	root可以创建普通用户cron计划任务   crontab -e -u wgp

	crond不能守护秒级定时任务，通常秒级的定时任务需要自己写shell脚本

	#!/bin/bash
	whith true
	do
	    echo "hello world！" >>/tmp/log.txt
	    sleep 1
	done

	sh test.sh &   放到后台执行

	tail -f /tmp/log.txt 查看文件变化

	在编辑里面要加上注释来区分是谁编写的
	00 09,14 * * 6,0 /bin/bash /server/scripts/test.sh >/dev/null 2>&1
	每周六，日的上午九点和下午14点执行test.sh，并把标准错误2和标准输出1定位到空文件
	*/1 * * * * echo + >>/tmp/log.log  >/dev/null 2>&1
	注意：定时规则如果是命令在已经有了一个重定向符号>>,再加上一个重定向/dev/null 2>&1，是没有结果的
	命令放定时任务里面，时间的%必需要转义\%
	cron服务的日志文件在/var/log/cron文件下

	要注意环境变量给定时任务带来的影响，特别是与java服务相关的变量，定时任务只能识别很少的系统变量，同时也要避免不必要的命令打印输出